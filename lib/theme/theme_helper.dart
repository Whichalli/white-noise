import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    PrefUtils().setThemeData(_newTheme);
    Get.forceAppUpdate();
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      colorScheme: colorScheme,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.blueGray90002,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(
              26,
            ),
          ),
        ),
      ),
      textTheme: TextTheme(
        bodySmall: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: getFontSize(
            10,
          ),
          fontFamily: 'Russo One',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: getFontSize(
            17,
          ),
          fontFamily: 'Century Gothic',
          fontWeight: FontWeight.w700,
        ),
        bodyLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: getFontSize(
            17,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w400,
        ),
        titleSmall: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: getFontSize(
            20,
          ),
          fontFamily: 'Century Gothic',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.blueGray90001,
          fontSize: getFontSize(
            25,
          ),
          fontFamily: 'Metropolis',
          fontWeight: FontWeight.w800,
        ),
        labelLarge: TextStyle(
          color: appTheme.deepPurpleA100,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Metropolis',
          fontWeight: FontWeight.w600,
        ),
      ),
      visualDensity: VisualDensity.standard,
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber600 => Color(0XFFF5B501);
  // Black
  Color get black900 => Color(0XFF000000);
  // Blue
  Color get blue30019 => Color(0X1963B4FF);
  // BlueGray
  Color get blueGray400 => Color(0XFF888888);
  Color get blueGray900 => Color(0XFF2D344B);
  Color get blueGray90001 => Color(0XFF333333);
  Color get blueGray90002 => Color(0XFF21283F);
  // DeepPurple
  Color get deepPurpleA100 => Color(0XFF946FFF);
  // Gray
  Color get gray100 => Color(0XFFF2F2F2);
  Color get gray400 => Color(0XFFBDBDBD);
  Color get gray50 => Color(0XFFFFF4F9);
  Color get gray500 => Color(0XFF8A9A9D);
  Color get gray5001 => Color(0XFFFFF6F6);
  Color get gray600 => Color(0XFF828282);
  Color get gray800 => Color(0XFF4F4F4F);
  Color get gray900 => Color(0XFF202020);
  // GrayCe
  Color get gray900Ce => Color(0XCE1E1E1E);
  // Green
  Color get greenA400 => Color(0XFF00D971);
  // Indigo
  Color get indigo5099 => Color(0X99EBEBF5);
  // LightBlue
  Color get lightBlue200 => Color(0XFF6FC7FF);
  // Pink
  Color get pink300 => Color(0XFFFD4EA6);
  Color get pinkA100 => Color(0XFFFF69B4);
  // Red
  Color get red400 => Color(0XFFEB5757);
  // White
  Color get whiteA700 => Color(0XFFFFFDFD);
  Color get whiteA70001 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
